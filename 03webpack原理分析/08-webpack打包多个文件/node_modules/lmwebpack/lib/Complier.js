const fs = require("fs");
const ejs = require("ejs");
const path = require("path");
const parser = require("@babel/parser");
const traverse = require("@babel/traverse");
const generate = require("@babel/generator");

class Complier {
    constructor(config) {
        // 保存配置文件
        this.config = config;
        // 保存模块依赖关系
        // { 打包文件地址：打包文件内容的形式存储 }
        this.modules = {};
    };
    run() {
        this.buildModule();
        this.emitFile();
    };
    // 将依赖关系保存到this.modules之中
    buildModule() {
        let code = this.getSource();
        // 修改主模块中的代码，替换require，修改路径
        this.parseModule(code);
        // this.modules[this.config.entry] = code;
    };
    parseModule(code) {
        
    }
    // 读取文件内容
    getSource() {
        // 通过配置文件的入口得到需要打包文件的路径
        return fs.readFileSync(this.config.entry, "utf8");
    }
    emitFile() {
        // 读取EJS模板
        let templatePath = path.resolve(__dirname, "main.ejs");
        let template = fs.readFileSync(templatePath, "utf8");
        // 将模板中的参数替换并返回给我们
        let resultCode = ejs.render(template, {
            entryId: this.config.entry,
            modules: this.modules
        })
        // 通过出口文件配置，创建对应的文件以及文件夹
        let outputDir = this.config.output.path;
        // 判断打包文件是否存在
        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir);
        }
        let outputPath = path.resolve(outputDir, this.config.output.filename);
        fs.writeFileSync(outputPath, resultCode);
    }
}

module.exports = Complier;